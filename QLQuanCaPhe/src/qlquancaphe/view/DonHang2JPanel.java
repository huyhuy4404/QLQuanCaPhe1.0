/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package qlquancaphe.view;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BoxLayout;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableModel;
import qlquancaphe.DAO.DoanhThuDAO;
import qlquancaphe.DAO.LoaiSanPhamDAO;
import qlquancaphe.DAO.SanPhamDAO;
import qlquancaphe.entity.LoaiSanPham;
import qlquancaphe.entity.SanPham;
import qlquancaphe.utils.MsgBox;
import qlquancaphe.utils.XImage;

/**
 *
 * @author huydz
 */
public class DonHang2JPanel extends javax.swing.JPanel {

    SanPhamDAO spDAO = new SanPhamDAO();
    LoaiSanPhamDAO lspDAO = new LoaiSanPhamDAO();
    DoanhThuDAO tkDAO = new DoanhThuDAO();
    private ArrayList<String> productList;

    /**
     * Creates new form DonHang2JPanel
     */
    public DonHang2JPanel() throws ParseException {
        initComponents();
        fillComBoBoxSP();
        xoaTableHoaDon();
        loadDate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        pnHoaDon = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblHoaDon = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnInHoaDon = new javax.swing.JButton();
        lblTongTien = new javax.swing.JLabel();
        btnHuyMon = new javax.swing.JButton();
        btnThanhToan = new javax.swing.JButton();
        srpnSanPham = new javax.swing.JScrollPane();
        pnSanPham = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        cboSanPham = new javax.swing.JComboBox<>();
        btnThayDoiSL = new javax.swing.JButton();
        pnTinhTien = new javax.swing.JPanel();
        pnXemHoaDon = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblXemHoaDon = new javax.swing.JTable();
        jComboBox1 = new javax.swing.JComboBox<>();
        btnTroVe = new javax.swing.JButton();
        dchNgay = new com.toedter.calendar.JDateChooser();
        btnXemChiTiet = new javax.swing.JButton();
        pnChiTiet = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(900, 566));

        jPanel1.setLayout(new java.awt.CardLayout());

        pnHoaDon.setPreferredSize(new java.awt.Dimension(900, 566));

        tblHoaDon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Tên món", "SL", "Giá", "Tổng giá"
            }
        ));
        jScrollPane1.setViewportView(tblHoaDon);

        jLabel1.setText("Tổng tiền:");

        btnInHoaDon.setBackground(new java.awt.Color(204, 255, 204));
        btnInHoaDon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/qlquancaphe/icons/Print preview.png"))); // NOI18N
        btnInHoaDon.setText("Xem hóa đơn");
        btnInHoaDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInHoaDonActionPerformed(evt);
            }
        });

        lblTongTien.setText("0");

        btnHuyMon.setBackground(new java.awt.Color(204, 255, 204));
        btnHuyMon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/qlquancaphe/icons/Trash.png"))); // NOI18N
        btnHuyMon.setText("Hủy món");
        btnHuyMon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuyMonActionPerformed(evt);
            }
        });

        btnThanhToan.setBackground(new java.awt.Color(204, 255, 204));
        btnThanhToan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/qlquancaphe/icons/Price list.png"))); // NOI18N
        btnThanhToan.setText("Thanh toán");
        btnThanhToan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThanhToanActionPerformed(evt);
            }
        });

        pnSanPham.setLayout(new java.awt.GridLayout(14, 3, 8, 8));
        srpnSanPham.setViewportView(pnSanPham);

        cboSanPham.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboSanPham.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboSanPhamActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cboSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(228, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cboSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(10, Short.MAX_VALUE))
        );

        btnThayDoiSL.setBackground(new java.awt.Color(204, 255, 204));
        btnThayDoiSL.setIcon(new javax.swing.ImageIcon(getClass().getResource("/qlquancaphe/icons/Edit.png"))); // NOI18N
        btnThayDoiSL.setText("Thay đổi SL");
        btnThayDoiSL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThayDoiSLActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnHoaDonLayout = new javax.swing.GroupLayout(pnHoaDon);
        pnHoaDon.setLayout(pnHoaDonLayout);
        pnHoaDonLayout.setHorizontalGroup(
            pnHoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnHoaDonLayout.createSequentialGroup()
                .addGroup(pnHoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnHoaDonLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1))
                    .addGroup(pnHoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(lblTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(pnHoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(pnHoaDonLayout.createSequentialGroup()
                                .addComponent(btnThayDoiSL, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnHoaDonLayout.createSequentialGroup()
                                .addComponent(btnInHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnHuyMon, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnHoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(srpnSanPham)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        pnHoaDonLayout.setVerticalGroup(
            pnHoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnHoaDonLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnHoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lblTongTien))
                .addGap(12, 12, 12)
                .addGroup(pnHoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnHuyMon, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnInHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnHoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnThayDoiSL, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(78, Short.MAX_VALUE))
            .addGroup(pnHoaDonLayout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(srpnSanPham))
        );

        jPanel1.add(pnHoaDon, "card2");

        javax.swing.GroupLayout pnTinhTienLayout = new javax.swing.GroupLayout(pnTinhTien);
        pnTinhTien.setLayout(pnTinhTienLayout);
        pnTinhTienLayout.setHorizontalGroup(
            pnTinhTienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 900, Short.MAX_VALUE)
        );
        pnTinhTienLayout.setVerticalGroup(
            pnTinhTienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 510, Short.MAX_VALUE)
        );

        jPanel1.add(pnTinhTien, "card3");

        pnXemHoaDon.setBackground(new java.awt.Color(255, 255, 255));

        tblXemHoaDon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Mã HD", "Ngày mua", "Tổng tiền", "Mã NV"
            }
        ));
        jScrollPane2.setViewportView(tblXemHoaDon);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnTroVe.setBackground(new java.awt.Color(204, 204, 255));
        btnTroVe.setIcon(new javax.swing.ImageIcon(getClass().getResource("/qlquancaphe/icons/Closed door.png"))); // NOI18N
        btnTroVe.setText("Trở về");

        dchNgay.setDateFormatString("yyyy-MM-dd");
        dchNgay.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
                dchNgayAncestorMoved(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        dchNgay.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                dchNgayPropertyChange(evt);
            }
        });

        btnXemChiTiet.setBackground(new java.awt.Color(204, 204, 255));
        btnXemChiTiet.setIcon(new javax.swing.ImageIcon(getClass().getResource("/qlquancaphe/icons/List.png"))); // NOI18N
        btnXemChiTiet.setText("Xem chi tiết");
        btnXemChiTiet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXemChiTietActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnXemHoaDonLayout = new javax.swing.GroupLayout(pnXemHoaDon);
        pnXemHoaDon.setLayout(pnXemHoaDonLayout);
        pnXemHoaDonLayout.setHorizontalGroup(
            pnXemHoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
            .addGroup(pnXemHoaDonLayout.createSequentialGroup()
                .addGroup(pnXemHoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnXemHoaDonLayout.createSequentialGroup()
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(dchNgay, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnXemHoaDonLayout.createSequentialGroup()
                        .addComponent(btnTroVe, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48)
                        .addComponent(btnXemChiTiet, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 286, Short.MAX_VALUE))
        );
        pnXemHoaDonLayout.setVerticalGroup(
            pnXemHoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnXemHoaDonLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(pnXemHoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dchNgay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pnXemHoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnTroVe, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
                    .addComponent(btnXemChiTiet, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel1.add(pnXemHoaDon, "card4");

        pnChiTiet.setBackground(new java.awt.Color(255, 255, 255));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable1);

        jButton2.setBackground(new java.awt.Color(204, 204, 255));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/qlquancaphe/icons/Exit.png"))); // NOI18N
        jButton2.setText("Quay lại");

        javax.swing.GroupLayout pnChiTietLayout = new javax.swing.GroupLayout(pnChiTiet);
        pnChiTiet.setLayout(pnChiTietLayout);
        pnChiTietLayout.setHorizontalGroup(
            pnChiTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 900, Short.MAX_VALUE)
            .addGroup(pnChiTietLayout.createSequentialGroup()
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        pnChiTietLayout.setVerticalGroup(
            pnChiTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnChiTietLayout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 466, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 14, Short.MAX_VALUE))
        );

        jPanel1.add(pnChiTiet, "card5");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnInHoaDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInHoaDonActionPerformed
        // TODO add your handling code here:
        pnHoaDon.setVisible(false);
        pnTinhTien.setVisible(false);
        pnXemHoaDon.setVisible(true);
    }//GEN-LAST:event_btnInHoaDonActionPerformed

    private void btnHuyMonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHuyMonActionPerformed
        // TODO add your handling code here:
        deleteMon();
        tinhTongTien();
        loadThanhToan();
    }//GEN-LAST:event_btnHuyMonActionPerformed

    private void btnThanhToanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThanhToanActionPerformed
        // TODO add your handling code here:

//        if (check()) {
//            ThanhToan();
//        }
    }//GEN-LAST:event_btnThanhToanActionPerformed

    private void cboSanPhamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboSanPhamActionPerformed
        // TODO add your handling code here:
        loadSanPham();
    }//GEN-LAST:event_cboSanPhamActionPerformed

    private void btnThayDoiSLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThayDoiSLActionPerformed
        // TODO add your handling code here:
        thayDoiSoLuong();
        tinhTongTien();
    }//GEN-LAST:event_btnThayDoiSLActionPerformed

    private void dchNgayAncestorMoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_dchNgayAncestorMoved
        
    }//GEN-LAST:event_dchNgayAncestorMoved

    private void dchNgayPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_dchNgayPropertyChange
        // TODO add your handling code here:
        loadTableXemHoaDon();
    }//GEN-LAST:event_dchNgayPropertyChange

    private void btnXemChiTietActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXemChiTietActionPerformed
        // TODO add your handling code here:
        pnHoaDon.setVisible(false);
        pnTinhTien.setVisible(false);
        pnXemHoaDon.setVisible(false);
        pnChiTiet.setVisible(true);
    }//GEN-LAST:event_btnXemChiTietActionPerformed
    void loadDate() throws ParseException {
        Date date = new Date();
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        String ngayHienTai = dateFormat.format(date);
        Date ngayHienTaiDate = dateFormat.parse(ngayHienTai);
        dchNgay.setDate(ngayHienTaiDate);
        loadTableXemHoaDon();
        

    }
    void loadTableXemHoaDon(){
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(dchNgay.getDate());
        int year = calendar.get(Calendar.YEAR);
        int month = calendar.get(Calendar.MONTH) + 1; //Tháng trong Calendar bắt đầu từ 0
        int day = calendar.get(Calendar.DAY_OF_MONTH);
        DefaultTableModel model = (DefaultTableModel) tblXemHoaDon.getModel();
        model.setRowCount(0);
        List<Object[]> list = tkDAO.hoaDonNamandThangandNgay(year, month, day);
        for (Object[] row : list) {
            model.addRow(row);
        }
    }

    void loadSanPham() {

        LoaiSanPham selectedLSP = (LoaiSanPham) cboSanPham.getSelectedItem();
        if (selectedLSP != null) {
            int maLSP = selectedLSP.getMaLSP();
            List<SanPham> list = spDAO.selectbyMaLSP(maLSP);
            pnSanPham.removeAll();
            for (SanPham sp : list) {
                JPanel pnChuaSP = new JPanel();
                pnChuaSP.setPreferredSize(new Dimension(180, 200));
                pnChuaSP.setLayout(new BoxLayout(pnChuaSP, BoxLayout.Y_AXIS));
                pnChuaSP.setBackground(Color.WHITE);
                productList = new ArrayList<>();
                productList.add(sp.getTenSP());
                JLabel lblHinh = new JLabel();
                lblHinh.setPreferredSize(new Dimension(180, 180));
                lblHinh.setAlignmentX(Component.CENTER_ALIGNMENT);
                if (sp.getHinh() != null) {
                    lblHinh.setToolTipText(sp.getHinh());
                    lblHinh.setIcon(XImage.read(sp.getHinh()));
                    JLabel lblSanPham = new JLabel(sp.getTenSP());
                    lblSanPham.setAlignmentX(Component.CENTER_ALIGNMENT);
                    pnChuaSP.add(lblHinh);
                    pnChuaSP.add(lblSanPham);
                    pnSanPham.add(pnChuaSP);
                    lblHinh.addMouseListener(new MouseAdapter() {
                        @Override
                        public void mouseClicked(MouseEvent e) {
                            // Hiển thị tên sản phẩm khi click chuột vào hình
                            ChonSanPham(sp);
                        }
                    });
                    lblSanPham.addMouseListener(new MouseAdapter() {
                        @Override
                        public void mouseClicked(MouseEvent e) {
                            // Hiển thị tên sản phẩm khi click chuột
                            ChonSanPham(sp);
                        }
                    });

                    // Thêm MouseListener vào pnChuaSP
                    pnChuaSP.addMouseListener(new MouseAdapter() {
                        @Override
                        public void mouseClicked(MouseEvent e) {
                            // Hiển thị tên sản phẩm khi click chuột
                            ChonSanPham(sp);
                        }
                    });
                }
            }

            pnSanPham.revalidate();
            pnSanPham.repaint();
        }

    }

    private void ChonSanPham(SanPham sp) {
        String input = MsgBox.prompt(this, "Vui lòng nhập số lượng: ");
        if (!input.matches("\\d+")) {
            MsgBox.alert(this, "Số lượng chỉ là số");
            return;

        } else {
            int sl1 = Integer.parseInt(input);
            if (sl1 <= 0) {
                MsgBox.alert(this, "Số lượng phải lớn hơn 0");
                return;
            }
        }
        if (input != null && !input.isEmpty()) {
            try {
                int sl = Integer.parseInt(input);
                DefaultTableModel model = (DefaultTableModel) tblHoaDon.getModel();
                boolean productExists = false; // Biến cờ kiểm tra xem sản phẩm đã tồn tại hay chưa

                for (int i = 0; i < model.getRowCount(); i++) {
                    if (model.getValueAt(i, 0).equals(sp.getTenSP())) {
                        // Sản phẩm đã tồn tại, tăng số lượng lên
                        int currentQuantity = (int) model.getValueAt(i, 1);
                        model.setValueAt(currentQuantity + sl, i, 1);
                        float suaTongTien = (float) model.getValueAt(i, 3);
                        model.setValueAt((currentQuantity + sl) * sp.getDonGia(), i, 3);
                        productExists = true;
                        break;
                    }
                }

                if (!productExists) {
                    // Sản phẩm chưa tồn tại, thêm mới vào bảng
                    model.addRow(new Object[]{sp.getTenSP(), sl, sp.getDonGia(), sl * sp.getDonGia()});
                }
            } catch (Exception e) {
            }
        }
        tinhTongTien();

    }

    void loadThanhToan() {
        if (tblHoaDon.getRowCount() == 0) {
            btnThanhToan.setEnabled(false);
        } else {
            btnThanhToan.setEnabled(true);
        }
    }

    void deleteMon() {
        try {
            int hoaDon = tblHoaDon.getSelectedRow();
            DefaultTableModel model = (DefaultTableModel) tblHoaDon.getModel();
            model.removeRow(hoaDon);
        } catch (Exception e) {
            MsgBox.alert(this, "Vui lòng chọn món cần hủy");
            return;
        }
    }

    void thayDoiSoLuong() {
        try {
            int hoaDon = tblHoaDon.getSelectedRow();
            if (hoaDon < 0) {
                MsgBox.alert(this, "Vui lòng món cần thay đổi");
                return;
            }
            DefaultTableModel model = (DefaultTableModel) tblHoaDon.getModel();
            String input = MsgBox.prompt(this, "Vui lòng nhập số lượng: ");
            if (!input.matches("\\d+")) {
                MsgBox.alert(this, "Số lượng chỉ là số");
                return;

            } else {
                int sl1 = Integer.parseInt(input);
                if (sl1 <= 0) {
                    MsgBox.alert(this, "Số lượng phải lớn hơn 0");
                    return;
                }
            }
            if (input != null && !input.isEmpty()) {
                int sl = Integer.parseInt(input);
                float donGiaFloat = (float) model.getValueAt(hoaDon, 2);
                int donGia = (int) donGiaFloat;

                model.setValueAt(sl, hoaDon, 1);
                model.setValueAt(sl * donGia, hoaDon, 3);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    void tinhTongTien() {
        DefaultTableModel model = (DefaultTableModel) tblHoaDon.getModel();
        if (model.getRowCount() == 0) {
            lblTongTien.setText(0 + "");
        }
        int soHang = model.getRowCount();
        int tongTien = 0;
        for (int i = 0; i < soHang; i++) {
            float soTien = Float.parseFloat(tblHoaDon.getValueAt(i, 3).toString());
            tongTien += soTien;
            String formattedTongTien = String.format("%,d", tongTien);
            lblTongTien.setText(String.valueOf(formattedTongTien));
        }
    }

    void xoaTableHoaDon() {
        DefaultTableModel model = (DefaultTableModel) tblHoaDon.getModel();
        model.setRowCount(0);
    }

    public void fillComBoBoxSP() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboSanPham.getModel();
        model.removeAllElements();
        try {
            List<LoaiSanPham> ds = lspDAO.selectAll();
            for (LoaiSanPham cd : ds) {
                model.addElement(cd);
            }

        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu");
            e.printStackTrace();
        }
    }

    public void loadPanelSanPham() {

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHuyMon;
    private javax.swing.JButton btnInHoaDon;
    private javax.swing.JButton btnThanhToan;
    private javax.swing.JButton btnThayDoiSL;
    private javax.swing.JButton btnTroVe;
    private javax.swing.JButton btnXemChiTiet;
    private javax.swing.JComboBox<String> cboSanPham;
    private com.toedter.calendar.JDateChooser dchNgay;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblTongTien;
    private javax.swing.JPanel pnChiTiet;
    private javax.swing.JPanel pnHoaDon;
    private javax.swing.JPanel pnSanPham;
    private javax.swing.JPanel pnTinhTien;
    private javax.swing.JPanel pnXemHoaDon;
    private javax.swing.JScrollPane srpnSanPham;
    private javax.swing.JTable tblHoaDon;
    private javax.swing.JTable tblXemHoaDon;
    // End of variables declaration//GEN-END:variables
}
